# This is a basic workflow to help you get started with Actions

name: CI

env:
  ## Sets environment variable
  SOLUBLE_ORG_ID: 516676385582
  SOLUBLE_API_URL: https://app.demo.soluble.cloud
  SOLUBLE_API_TOKEN: ${{secrets.SOLUBLE_API_TOKEN}}
  DOCKER_REGISTRY_USER: ${{ secrets.DOCKER_REGISTRY_USER }}
  DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Login to docker registry
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_REGISTRY_USER }}
          password: ${{ env.DOCKER_REGISTRY_PASSWORD }}
      - name: Scan the repo for vulnerabilities in IaC
        run: |
             env
             docker pull lacework/codesec-iac:latest
             docker run -e SCAN_COMMAND=tf-scan -e LW_ACCOUNT=$LW_ACCOUNT -e LW_API_KEY=$LW_API_KEY -e LW_API_SECRET=$LW_API_SECRET -v "$(pwd):/app/src" -e WORKSPACE=src lacework/codesec-iac:latest
        env:
          LW_ACCOUNT: ${{ secrets.LW_ACCOUNT }}
          LW_API_KEY: ${{ secrets.LW_API_KEY }}
          LW_API_SECRET: ${{ secrets.LW_API_SECRET }}
      # Runs a set of commands using the runners shell
      # - name: Soluble TF Scan
      #   run: |
      #     curl https://raw.githubusercontent.com/soluble-ai/soluble-cli/master/linux-install.sh | sh
      #     soluble terraform-scan --upload --fail high
